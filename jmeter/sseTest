import com.launchdarkly.eventsource.EventSource
import com.launchdarkly.eventsource.EventHandler
import com.launchdarkly.eventsource.MessageEvent
import java.net.URI
import java.io.StringReader
import java.util.concurrent.TimeUnit
import java.time.Duration;
import java.time.LocalTime;
import javax.json.Json
import javax.json.JsonObject
import javax.json.JsonReader
import javax.json.JsonValue
import java.util.concurrent.ConcurrentHashMap

class SimpleEventHandler implements EventHandler {
    List<String> respList = []
    String errorMessage = null
    int count = 0;

    void onOpen() {}

    void onClosed() {}

    void onMessage(String Event, MessageEvent messageEvent) throws java.lang.Exception {
        if (Event.equals("BID_PRICE_UPDATE")) {
        	  count = count + 1
            respList.add(messageEvent.getLastEventId() + ": " + messageEvent.getData())
        } else {
        	  respList.add("init message : " + messageEvent.getData() + "\n")
        }
    }

    void onComment(String comment) {
        System.out.println("comment : " + comment)
    }

    void onError(Throwable t) {
    	    int threadNum = Thread.currentThread().getId();
    	    errorMessage = t.getMessage();
    }


}

EventHandler eH = new SimpleEventHandler()
String responseList = ""

String[] parameters = Parameters.split(",")
String uri = parameters[0]  
long reconnectionTimeMs = parameters[1].toLong()
long sleepDuration = parameters[2].toLong()

EventSource.Builder builder = new EventSource.Builder(eH, URI.create(uri))
EventSource eventSource = builder.readTimeout(sleepDuration + 10, TimeUnit.SECONDS).build()
eventSource.setReconnectTimeMillis(reconnectionTimeMs)

try {
     eventSource.start()
     TimeUnit.SECONDS.sleep(sleepDuration)

} catch(Exception e) {
	eventSource.close()
} finally {
	eventSource.close()
}

responseList = responseList + "amount : " + eH.count + "\n"
responseList = responseList + "erro message : " + eH.errorMessage + "\n" 
for (String respRecord : eH.respList) {
    responseList = responseList + "${respRecord}\n"
}

SampleResult.setResponseData(responseList, "866")


if(eH.errorMessage != null) {
	SampleResult.setSuccessful(false);
}
